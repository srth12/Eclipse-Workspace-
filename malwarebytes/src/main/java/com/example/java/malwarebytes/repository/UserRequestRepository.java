package com.example.java.malwarebytes.repository;

import com.example.java.malwarebytes.dao.UserRequestDAO;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;

import java.util.List;

public interface UserRequestRepository extends CrudRepository<UserRequestDAO, Integer> {

    //TODO doesn't handle requests with same timestamp; assuming only 1 requests per timestamp
    @Query(value = "select * from user_login_request where user_id = ?1 and timestamp < ?2 order by timestamp desc limit 1", nativeQuery = true)
    List<UserRequestDAO> findPreviousRequests(String userId, long timestamp);

    //TODO doesn't handle requests with same timestamp; assuming only 1 requests per timestamp
    @Query(value = "select * from user_login_request where user_id = ?1 and timestamp > ?2 order by timestamp asc limit 1", nativeQuery = true)
    List<UserRequestDAO> findNextRequests(String userId, long timestamp);
}
