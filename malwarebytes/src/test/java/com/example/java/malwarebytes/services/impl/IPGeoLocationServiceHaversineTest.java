package com.example.java.malwarebytes.services.impl;

import com.example.java.malwarebytes.dto.GeoLocation;
import com.example.java.malwarebytes.services.IPGeoLocationService;
import com.maxmind.geoip2.exception.AddressNotFoundException;
import com.maxmind.geoip2.exception.GeoIp2Exception;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.net.URISyntaxException;

import static org.junit.jupiter.api.Assertions.*;

class IPGeoLocationServiceHaversineTest {

    @Test
    void getGeoLocationCompareResult1() throws IOException, GeoIp2Exception, URISyntaxException {
        IPGeoLocationService lService = new IPGeoLocationServiceHaversine();
        GeoLocation geoLocation = lService.getGeoLocation("103.105.227.64");
        String actualResult = geoLocation.getLatitude() + ":" + geoLocation.getLongitude()
                + ":" + geoLocation.getRadius();
        var expectedResult = "12.9634:77.5855:20";
        assertTrue(actualResult.equalsIgnoreCase(expectedResult), "Expected "
                + expectedResult + " but returned " + actualResult);
    }

    @Test
    void getGeoLocationWhenEmptyPassed() throws IOException, GeoIp2Exception {
        IPGeoLocationService lService = new IPGeoLocationServiceHaversine();
        assertThrows(AddressNotFoundException.class, () -> lService.getGeoLocation(""),
                "Should throw exception if ip not provided");
    }

    @Test
    void getDatabaseReader() {
    }
}